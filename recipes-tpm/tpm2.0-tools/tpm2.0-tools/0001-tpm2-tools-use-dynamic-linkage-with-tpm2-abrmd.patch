From 2440314bb26f4c855ac552ecb82b6d79f41737a4 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Tue, 16 May 2017 22:15:30 +0800
Subject: [PATCH] tpm2-tools: use dynamic linkage with tpm2-abrmd

tpm2-abrmd has huge dependencies and they are not necessary to be involved
in initramfs.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 lib/context-util.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

diff --git a/lib/context-util.c b/lib/context-util.c
index 88a24b1..ced28e0 100644
--- a/lib/context-util.c
+++ b/lib/context-util.c
@@ -37,6 +37,7 @@
 #include <tcti/tcti_socket.h>
 #endif
 #ifdef HAVE_TCTI_TABRMD
+#include <dlfcn.h>
 #include <tcti/tcti-tabrmd.h>
 #endif
 
@@ -132,29 +133,48 @@ TSS2_TCTI_CONTEXT*
 tcti_tabrmd_init (void)
 {
     TSS2_TCTI_CONTEXT *tcti_ctx;
+    void *tcti_handle;
+    TSS2_RC (*init)(TSS2_TCTI_CONTEXT *, size_t *);
     TSS2_RC rc;
     size_t size;
 
-    rc = tss2_tcti_tabrmd_init(NULL, &size);
+    tcti_handle = dlopen("libtcti-tabrmd.so.0", RTLD_LAZY);
+    if (!tcti_handle) {
+	fprintf (stderr,
+		 "Unable to find out the tabrmd tcti library\n");
+	return NULL;
+    }
+
+    init = dlsym(tcti_handle, "tss2_tcti_tabrmd_init");
+    if (!init) {
+        dlclose(tcti_handle);
+        return NULL;
+    }
+
+    rc = init(NULL, &size);
     if (rc != TSS2_RC_SUCCESS) {
         fprintf (stderr,
                  "Failed to get size for TABRMD TCTI context: 0x%x\n",
                  rc);
+        dlclose(tcti_handle);
         return NULL;
     }
     tcti_ctx = (TSS2_TCTI_CONTEXT*)calloc (1, size);
     if (tcti_ctx == NULL) {
         fprintf (stderr, "Allocation for TABRMD TCTI context failed: %s\n",
                  strerror (errno));
+        dlclose(tcti_handle);
         return NULL;
     }
-    rc = tss2_tcti_tabrmd_init (tcti_ctx, &size);
+    rc = init (tcti_ctx, &size);
     if (rc != TSS2_RC_SUCCESS) {
         fprintf (stderr, "Failed to initialize TABRMD TCTI context: 0x%x\n",
                  rc);
         free (tcti_ctx);
+        dlclose(tcti_handle);
         return NULL;
     }
+    dlclose(tcti_handle);
     return tcti_ctx;
 }
 #endif
-- 
2.7.4

